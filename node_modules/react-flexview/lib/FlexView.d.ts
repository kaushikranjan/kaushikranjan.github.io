/// <reference types="react" />
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { ObjectOverwrite } from 'typelevel-ts';
export declare namespace FlexView {
    type Props = ObjectOverwrite<React.HTMLProps<HTMLDivElement>, {
        /** FlexView content */
        children?: React.ReactNode;
        /** flex-direction: column */
        column?: boolean;
        /** align content vertically */
        vAlignContent?: 'top' | 'center' | 'bottom';
        /** align content horizontally */
        hAlignContent?: 'left' | 'center' | 'right';
        /** margin-left property ("auto" to align self right) */
        marginLeft?: string | number;
        /** margin-top property ("auto" to align self bottom) */
        marginTop?: string | number;
        /** margin-right property ("auto" to align self left) */
        marginRight?: string | number;
        /** margin-bottom property ("auto" to align self top) */
        marginBottom?: string | number;
        /** grow property (for parent primary axis) */
        grow?: boolean | number;
        /** flex-shrink property */
        shrink?: boolean | number;
        /** flex-basis property */
        basis?: string | number;
        /** wrap content */
        wrap?: boolean;
        /** height property (for parent secondary axis) */
        height?: string | number;
        /** width property (for parent secondary axis) */
        width?: string | number;
        /** class to pass to top level element of the component */
        className?: string;
        /** style object to pass to top level element of the component */
        style?: React.CSSProperties;
    }>;
}
/** A powerful React component to abstract over flexbox and create any layout on any browser */
export declare class FlexView extends React.Component<FlexView.Props> {
    static propTypes: {
        children: PropTypes.Requireable<any>;
        column: PropTypes.Requireable<any>;
        vAlignContent: PropTypes.Requireable<any>;
        hAlignContent: PropTypes.Requireable<any>;
        marginLeft: PropTypes.Requireable<any>;
        marginTop: PropTypes.Requireable<any>;
        marginRight: PropTypes.Requireable<any>;
        marginBottom: PropTypes.Requireable<any>;
        grow: PropTypes.Requireable<any>;
        shrink: PropTypes.Requireable<any>;
        basis: PropTypes.Requireable<any>;
        wrap: PropTypes.Requireable<any>;
        height: PropTypes.Requireable<any>;
        width: PropTypes.Requireable<any>;
        className: PropTypes.Requireable<any>;
        style: PropTypes.Requireable<any>;
    };
    componentDidMount(): void;
    logWarnings(): void;
    getGrow(): number;
    getShrink(): number;
    getBasis(): string;
    getFlexStyle(): React.CSSProperties;
    getStyle(): React.CSSProperties;
    getContentAlignmentClasses(): string;
    getClasses(): string;
    render(): JSX.Element;
}
